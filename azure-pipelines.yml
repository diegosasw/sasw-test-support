trigger:
- master
- feature/*

pool:
  vmImage: ubuntu-latest

variables:
  NUGET_FOLDER_NAME: nupkgs
  NUGET_REPOSITORY: https://whatever
  PRERELEASE_SUFFIX: $(Build.BuildId)
  ARTIFACTS_STAGING_DIR: $(Pipeline.Workspace)/$(NUGET_FOLDER_NAME)

stages:
- stage:
  displayName: 'Build'
  jobs:
  - job: 'Build'
    steps:
    - task: NuGetAuthenticate@0
      displayName: 'Authenticate in NuGet feed'
    - script: dotnet restore --no-cache --force
      displayName: 'Restore dependencies'
    - script: dotnet build --configuration Release --no-restore
      displayName: 'Build for Release'
- stage:
  displayName: 'Automated Tests'
  condition: succeeded()
  jobs:
  - job:
    displayName: 'Unit Tests'
    steps:
    - script: ls -a
      displayName: 'View'
    - script: ls test/Sasw.TestSupport.UnitTests/bin
      displayName: 'View bin'
    - script: dotnet vstest test/*UnitTests/bin/Release/**/*UnitTests.dll
      displayName: 'Run unit tests'
- stage:
  displayName: 'NuGet Package'
  condition: succeeded()
  jobs:
  - job:
    displayName: 'Pack Preview Version'
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    steps:
    - script: dotnet pack *.sln --configuration Release --output $(NUGET_FOLDER_NAME)
      displayName: 'Pack'
  - job:
    displayName: 'Pack Stable Version'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    steps:
    - script: dotnet pack *.sln --configuration Release --output $(NUGET_FOLDER_NAME) --version-suffix $(PRERELEASE_SUFFIX) --include-source --include-symbols -p:SymbolPackageFormat=snupkg
      displayName: 'Pack'

#stages:
#- stage: CI
#  jobs:
#  - job: 
#    steps:
#    - task: NuGetAuthenticate@0
#    - script: dotnet restore --no-cache --force
#    - script: dotnet build --configuration Release --no-restore
#    - script: dotnet vstest test/*UnitTests/bin/Release/**/*UnitTests.dll
#    - script: dotnet pack *.sln --configuration Release --output $(NUGET_FOLDER_NAME)
#      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#    - script: dotnet pack *.sln --configuration Release --output $(NUGET_FOLDER_NAME) --version-suffix $(PRERELEASE_SUFFIX) --include-source --include-symbols -p:SymbolPackageFormat=snupkg
#      condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
#    - script: dotnet nuget push **/*.nupkg --source $NUGET_REPOSITORY
